webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! body-scroll-lock */ \"./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @reuters-graphics/graphics-atlas-client */ \"./node_modules/@reuters-graphics/graphics-atlas-client/dist/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash/last */ \"./node_modules/lodash/last.js\");\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(lodash_last__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var lodash_random__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/random */ \"./node_modules/lodash/random.js\");\n/* harmony import */ var lodash_random__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_random__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lodash/throttle */ \"./node_modules/lodash/throttle.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_15__);\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\nvar atlas = new _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_9___default.a();\n\nvar CovidWave = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(CovidWave, _ChartComponent);\n\n  var _super = _createSuper(CovidWave);\n\n  function CovidWave() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CovidWave);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this), \"defaultProps\", {\n      locale: 'en',\n      height: 200,\n      thresholdDomain: [0.5, 0.75],\n      thresholdRange: {\n        color: ['#ccc', '#f68e26', '#de2d26'],\n        opacity: [0.1, 0.2, 0.4]\n      },\n      thresholdText: {\n        none: 'All countries are currently below the peak of their infection curve.',\n        one: '{{ &number }} country is still near the peak of its infection curve.',\n        more: '{{ &number }} countries are still near the peak of their infection curve.'\n      },\n      peakText: {\n        ofPeak: '{{ &percent }} of peak',\n        atPeak: 'At peak'\n      },\n      legendText: {\n        max: 'Countries near their highest daily average reported infections.',\n        min: 'Countries near zero daily average reported infections.'\n      }\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this), \"defaultData\", {});\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CovidWave, [{\n    key: \"destroy\",\n    value: function destroy() {\n      Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_8__[\"clearAllBodyScrollLocks\"])();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var data = this.data();\n      var props = this.props();\n      var node = this.selection().node();\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var height = props.height;\n      var legend = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].select(node).appendSelect('div.legend');\n      var chart = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].select(node).appendSelect('div.chart');\n      var svg = chart.appendSelect('svg.wave-chart').attr('width', width).attr('height', height).appendSelect('g').attr('transform', 'translate(0, 10)');\n      var t = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].transition().duration(250);\n      var linesData = Object.keys(data).map(function (c) {\n        var lineData = [{\n          x: 0,\n          y: 0,\n          c: c\n        }];\n        lineData.push({\n          x: 0.5,\n          y: +data[c] / 4,\n          c: c\n        });\n        lineData.push({\n          x: 1,\n          y: +data[c],\n          c: c\n        });\n        lineData.push({\n          x: 1.5,\n          y: +data[c] / 4,\n          c: c\n        });\n        lineData.push({\n          x: 2,\n          y: 0,\n          c: c\n        });\n        return lineData;\n      }); // sort least to most for mouse handler\n\n      linesData.sort(function (a, b) {\n        return a[2].y - b[2].y;\n      });\n      var x = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleLinear().domain([0, 2]).range([0, width]);\n      var y = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleLinear().domain([0, 1]).range([height - 20, 0]);\n      var color = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleThreshold().domain(props.thresholdDomain).range(props.thresholdRange.color);\n      var opacity = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleThreshold().domain(props.thresholdDomain).range(props.thresholdRange.opacity);\n      var line = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].line().curve(_utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].curveMonotoneX).x(function (d) {\n        return x(d.x);\n      }).y(function (d) {\n        return y(d.y);\n      });\n      var thresholdLine = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].line().curve(_utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].curveMonotoneX).x(function (d) {\n        return x(d.x);\n      }).y(function (d) {\n        return y(d.y) - 4;\n      });\n      svg.selectAll('path.countries').data(linesData).join('path').attr('class', function (d) {\n        return \"countries iso-\".concat(d[0].c);\n      }).style('opacity', function (d) {\n        return opacity(data[d[0].c]);\n      }).attr('stroke', function (d) {\n        return color(data[d[0].c]);\n      }).transition(t).attr('d', line);\n      var raisedY = 1;\n      svg.appendSelect('path.limit.max').datum([{\n        x: 0,\n        y: 0\n      }, {\n        x: 0.5,\n        y: raisedY / 4\n      }, {\n        x: 1,\n        y: raisedY\n      }, {\n        x: 1.5,\n        y: raisedY / 4\n      }, {\n        x: 2,\n        y: 0\n      }]).attr('stroke', function (d) {\n        return color(raisedY);\n      }).transition(t).attr('d', thresholdLine);\n      svg.appendSelect('line.top-countries').attr('x1', x(1.28)).attr('x2', x(2)).attr('y1', y(lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.domain()))).attr('y2', y(lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.domain()))).attr('stroke', function (d) {\n        return color(raisedY);\n      });\n      var countriesAboveThreshold = Object.keys(data).filter(function (c) {\n        return data[c] > lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(props.thresholdDomain);\n      }).length;\n      chart.appendSelect('div.label.right').style('bottom', \"\".concat(height - y(lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.domain())), \"px\")).style('right', '0px').style('width', \"\".concat(x(0.7), \"px\")).html(function () {\n        if (countriesAboveThreshold > 1) {\n          return mustache__WEBPACK_IMPORTED_MODULE_13___default.a.render(props.thresholdText.more, {\n            number: \"<span>\".concat(countriesAboveThreshold, \"</span>\")\n          });\n        }\n\n        if (countriesAboveThreshold === 1) {\n          return mustache__WEBPACK_IMPORTED_MODULE_13___default.a.render(props.thresholdText.one, {\n            number: \"<span>\".concat(countriesAboveThreshold, \"</span>\")\n          });\n        }\n\n        return mustache__WEBPACK_IMPORTED_MODULE_13___default.a.render(props.thresholdText.none);\n      }).select('span').style('color', lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(props.thresholdRange.color));\n      var highlightLab = chart.appendSelect('div.label.left').style('top', '0px').style('left', '0px').style('width', \"\".concat(x(0.7), \"px\")).html('');\n      var mouseRect = svg.appendSelect('rect.touch-capture').attr('width', width * 0.5).attr('height', height).attr('x', width * 0.25).attr('y', 0).style('fill', 'transparent');\n\n      var highlightCountry = function highlightCountry(yCoord) {\n        var dataCoord = y.invert(yCoord);\n        var dataPoint = linesData.find(function (d) {\n          return d[2].y > dataCoord;\n        });\n        if (!dataPoint) dataPoint = lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(linesData);\n        var dataPoints = Object.keys(data).filter(function (c) {\n          return +data[c] === dataPoint[2].y;\n        });\n        var isoAlpha2 = dataPoints[lodash_random__WEBPACK_IMPORTED_MODULE_14___default()(0, dataPoints.length - 1)];\n        var country = atlas.getCountry(isoAlpha2);\n        var percent = data[isoAlpha2] * 100;\n        highlightLab.appendSelect('div.country-name').text(country.translations[props.locale]);\n        highlightLab.appendSelect('div.country-data').html(percent === 100 ? \"<span>\".concat(props.peakText.atPeak, \"</span>\") : mustache__WEBPACK_IMPORTED_MODULE_13___default.a.render(props.peakText.ofPeak, {\n          percent: percent < 1 ? '<span>&lt; 1%</span>' : \"<span>\".concat(Math.round(percent), \"%</span>\")\n        })).select('span').style('color', color(data[isoAlpha2]));\n        svg.selectAll('path.countries').style('opacity', function (d) {\n          return d[0].c === isoAlpha2 ? 1 : 0;\n        });\n      };\n\n      var removeHighlight = function removeHighlight() {\n        Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_8__[\"enableBodyScroll\"])(mouseRect.node());\n        highlightLab.html('');\n        svg.selectAll('path.countries').style('opacity', function (d) {\n          return opacity(data[d[0].c]);\n        });\n      };\n\n      mouseRect.on('mouseenter.wave mousemove.wave', lodash_throttle__WEBPACK_IMPORTED_MODULE_15___default()(function () {\n        if (!_utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].event) return;\n        var coordinates = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].mouse(svg.node());\n        highlightCountry(coordinates[1]);\n      }, 50));\n      mouseRect.on('touchstart.wave touchmove.wave', lodash_throttle__WEBPACK_IMPORTED_MODULE_15___default()(function () {\n        Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_8__[\"disableBodyScroll\"])(mouseRect.node());\n        if (!_utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].event) return;\n\n        var _d3$touches = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].touches(svg.node()),\n            _d3$touches2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_d3$touches, 1),\n            coordinates = _d3$touches2[0];\n\n        highlightCountry(coordinates[1]);\n      }, 50), true);\n      mouseRect.on('mouseleave.wave', removeHighlight);\n      mouseRect.on('touchend.wave', removeHighlight);\n      mouseRect.on('touchcancel.wave', function () {\n        Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_8__[\"enableBodyScroll\"])(mouseRect.node());\n      }); // legend.appendSelect('h6')\n      //   .text('How to read this chart');\n\n      var maxLegend = legend.appendSelect('div.max.legend-container');\n      var minLegend = legend.appendSelect('div.min.legend-container');\n      var legendX = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleLinear().domain([0, 2]).range([0, 100]);\n      var legendY = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].scaleLinear().domain([0, 1]).range([30, 0]);\n      var legendLine = _utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].line().curve(_utils_d3__WEBPACK_IMPORTED_MODULE_11__[\"default\"].curveMonotoneX).x(function (d) {\n        return legendX(d.x);\n      }).y(function (d) {\n        return legendY(d.y);\n      });\n      var maxLegendSvg = maxLegend.appendSelect('svg').attr('width', 100).attr('height', 30);\n      maxLegendSvg.appendSelect('path.max.example').datum([{\n        x: 0,\n        y: 0\n      }, {\n        x: 0.5,\n        y: 0.75 / 4\n      }, {\n        x: 1,\n        y: 0.75\n      }, {\n        x: 1.5,\n        y: 0.75 / 4\n      }, {\n        x: 2,\n        y: 0\n      }]).attr('stroke', lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.range())).attr('stroke-width', 1).transition(t).attr('d', legendLine);\n      maxLegendSvg.appendSelect('path.max.guide').datum([{\n        x: 0,\n        y: 0\n      }, {\n        x: 0.5,\n        y: 1 / 4\n      }, {\n        x: 1,\n        y: 1\n      }, {\n        x: 1.5,\n        y: 1 / 4\n      }, {\n        x: 2,\n        y: 0\n      }]).attr('stroke', lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.range())).attr('stroke-width', 1).attr('stroke-dasharray', '5px 2px').transition(t).attr('d', legendLine);\n      maxLegend.appendSelect('div').text(props.legendText.max);\n      var minLegendSvg = minLegend.appendSelect('svg').attr('width', 100).attr('height', 30);\n      minLegendSvg.appendSelect('path.min.example').datum([{\n        x: 0,\n        y: 0\n      }, {\n        x: 0.5,\n        y: 0.2 / 4\n      }, {\n        x: 1,\n        y: 0.2\n      }, {\n        x: 1.5,\n        y: 0.2 / 4\n      }, {\n        x: 2,\n        y: 0\n      }]).attr('stroke', color.range()[0]).attr('stroke-width', 1).transition(t).attr('d', legendLine);\n      minLegendSvg.appendSelect('path.max.guide').datum([{\n        x: 0,\n        y: 0\n      }, {\n        x: 0.5,\n        y: 1 / 4\n      }, {\n        x: 1,\n        y: 1\n      }, {\n        x: 1.5,\n        y: 1 / 4\n      }, {\n        x: 2,\n        y: 0\n      }]).attr('stroke', lodash_last__WEBPACK_IMPORTED_MODULE_12___default()(color.range())).attr('stroke-width', 1).attr('stroke-dasharray', '5px 2px').transition(t).attr('d', legendLine);\n      minLegend.appendSelect('div').text(props.legendText.min);\n      return this;\n    }\n  }]);\n\n  return CovidWave;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CovidWave);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})